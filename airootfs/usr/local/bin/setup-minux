#!/bin/bash
set -e

echo "Checking network..."
HOST="8.8.8.8"
PING_COUNT=2

if ping -c "$PING_COUNT" "$HOST" > /dev/null 2>&1; then
    echo "Network OK. Starting MINUX installation..."
    archinstall --config /usr/share/minux.json || {
        echo "archinstall failed. Exiting..."
        exit 1
    }

    echo "Detecting installation device and partitions..."

    CONFIG_PATH="/var/log/archinstall/user_configuration.json"
    if ! [[ -f "$CONFIG_PATH" ]]; then
        echo "$CONFIG_PATH not found."
        exit 1
    fi

    # ÎîîÏä§ÌÅ¨ Ï†ïÎ≥¥ Ï∂îÏ∂ú
    INSTALL_DISK=$(jq -r '.disk_config.device_modifications[0].device' "$CONFIG_PATH")
    PARTITIONS=$(jq -c '.disk_config.device_modifications[0].partitions[]' "$CONFIG_PATH")

    # ÌååÌã∞ÏÖò Ï†ëÎëêÏñ¥ Í≤∞Ï†ï (SATA vs NVMe)
    if [[ "$INSTALL_DISK" =~ nvme ]]; then
        PFX="p"
    else
        PFX=""
    fi

    # ÎßàÏö¥Ìä∏ ÎåÄÏÉÅ Ï¥àÍ∏∞Ìôî
    ROOT_PART=""
    BOOT_PART=""
    EFI_PART=""

    IDX=1
    while IFS= read -r part; do
        MOUNTPOINT=$(echo "$part" | jq -r '.mountpoint')
        case "$MOUNTPOINT" in
            "/")
                ROOT_PART="${INSTALL_DISK}${PFX}${IDX}"
                ;;
            "/boot")
                BOOT_PART="${INSTALL_DISK}${PFX}${IDX}"
                ;;
            "/boot/efi")
                EFI_PART="${INSTALL_DISK}${PFX}${IDX}"
                ;;
        esac
        ((IDX++))
    done <<< "$PARTITIONS"

    if [[ -z "$ROOT_PART" ]]; then
        echo "Root partition not found in config."
        exit 1
    fi

    echo "Root: $ROOT_PART"
    echo "Boot: ${BOOT_PART:-(none)}"
    echo "EFI : ${EFI_PART:-(none)}"

    # ÎßàÏö¥Ìä∏ ÏûëÏóÖ ÏãúÏûë
    mount "$ROOT_PART" /mnt
    mkdir -p /mnt/{boot,boot/efi}

    if [[ -n "$BOOT_PART" ]]; then
        mount "$BOOT_PART" /mnt/boot
    fi

    if [[ -n "$EFI_PART" ]]; then
        mount "$EFI_PART" /mnt/boot/efi
    fi

    # ÌïÑÏàò ÏãúÏä§ÌÖú ÎîîÎ†âÌÜ†Î¶¨ ÎßàÏö¥Ìä∏
    mount --bind /dev /mnt/dev
    mount --bind /proc /mnt/proc
    mount --bind /sys /mnt/sys

    echo "Running setup script inside chroot..."
    SCRIPT_DIR="/root/minux_scripts"

    arch-chroot /mnt bash -c "
        pacman -Syu --noconfirm git &&
        git clone https://github.com/kuper0201/minux_ml_scripts $SCRIPT_DIR &&
        cd $SCRIPT_DIR &&
        ./setup.sh &&
        rm -rf $SCRIPT_DIR
    "

    read -rp $'\nDo you want to enter chroot for manual setting? [y/N]: ' answer
    answer=${answer,,}

    if [[ "$answer" == "y" || "$answer" == "yes" ]]; then
        arch-chroot /mnt bash
    else
        echo "Unmounting system..."
        umount -R /mnt
        echo "All done!"
    fi

else
    echo -e "\nMINUX installer requires an active network connection."
    echo "üîå Please check your connection and try again."
    exit 1
fi
